
package com.utilisateur.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ArticleWS", targetNamespace = "http://service.utilisateur.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ArticleWS {


    /**
     * 
     * @return
     *     returns java.util.List<com.utilisateur.service.Utilisateur>
     * @throws SQLException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllUtilisateurs", targetNamespace = "http://service.utilisateur.com/", className = "com.utilisateur.service.GetAllUtilisateurs")
    @ResponseWrapper(localName = "getAllUtilisateursResponse", targetNamespace = "http://service.utilisateur.com/", className = "com.utilisateur.service.GetAllUtilisateursResponse")
    @Action(input = "http://service.utilisateur.com/ArticleWS/getAllUtilisateursRequest", output = "http://service.utilisateur.com/ArticleWS/getAllUtilisateursResponse", fault = {
        @FaultAction(className = SQLException_Exception.class, value = "http://service.utilisateur.com/ArticleWS/getAllUtilisateurs/Fault/SQLException")
    })
    public List<Utilisateur> getAllUtilisateurs()
        throws SQLException_Exception
    ;

    /**
     * 
     * @param id
     * @return
     *     returns com.utilisateur.service.Utilisateur
     * @throws SQLException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUtilisateur", targetNamespace = "http://service.utilisateur.com/", className = "com.utilisateur.service.GetUtilisateur")
    @ResponseWrapper(localName = "getUtilisateurResponse", targetNamespace = "http://service.utilisateur.com/", className = "com.utilisateur.service.GetUtilisateurResponse")
    @Action(input = "http://service.utilisateur.com/ArticleWS/getUtilisateurRequest", output = "http://service.utilisateur.com/ArticleWS/getUtilisateurResponse", fault = {
        @FaultAction(className = SQLException_Exception.class, value = "http://service.utilisateur.com/ArticleWS/getUtilisateur/Fault/SQLException")
    })
    public Utilisateur getUtilisateur(
        @WebParam(name = "id", targetNamespace = "")
        int id)
        throws SQLException_Exception
    ;

    /**
     * 
     * @param password
     * @param login
     * @return
     *     returns boolean
     * @throws SQLException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addUtilisateur", targetNamespace = "http://service.utilisateur.com/", className = "com.utilisateur.service.AddUtilisateur")
    @ResponseWrapper(localName = "addUtilisateurResponse", targetNamespace = "http://service.utilisateur.com/", className = "com.utilisateur.service.AddUtilisateurResponse")
    @Action(input = "http://service.utilisateur.com/ArticleWS/addUtilisateurRequest", output = "http://service.utilisateur.com/ArticleWS/addUtilisateurResponse", fault = {
        @FaultAction(className = SQLException_Exception.class, value = "http://service.utilisateur.com/ArticleWS/addUtilisateur/Fault/SQLException")
    })
    public boolean addUtilisateur(
        @WebParam(name = "login", targetNamespace = "")
        String login,
        @WebParam(name = "password", targetNamespace = "")
        String password)
        throws SQLException_Exception
    ;

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     * @throws SQLException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteArticle", targetNamespace = "http://service.utilisateur.com/", className = "com.utilisateur.service.DeleteArticle")
    @ResponseWrapper(localName = "deleteArticleResponse", targetNamespace = "http://service.utilisateur.com/", className = "com.utilisateur.service.DeleteArticleResponse")
    @Action(input = "http://service.utilisateur.com/ArticleWS/deleteArticleRequest", output = "http://service.utilisateur.com/ArticleWS/deleteArticleResponse", fault = {
        @FaultAction(className = SQLException_Exception.class, value = "http://service.utilisateur.com/ArticleWS/deleteArticle/Fault/SQLException")
    })
    public boolean deleteArticle(
        @WebParam(name = "id", targetNamespace = "")
        int id)
        throws SQLException_Exception
    ;

    /**
     * 
     * @param password
     * @param id
     * @param login
     * @return
     *     returns boolean
     * @throws SQLException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateUtilisateur", targetNamespace = "http://service.utilisateur.com/", className = "com.utilisateur.service.UpdateUtilisateur")
    @ResponseWrapper(localName = "updateUtilisateurResponse", targetNamespace = "http://service.utilisateur.com/", className = "com.utilisateur.service.UpdateUtilisateurResponse")
    @Action(input = "http://service.utilisateur.com/ArticleWS/updateUtilisateurRequest", output = "http://service.utilisateur.com/ArticleWS/updateUtilisateurResponse", fault = {
        @FaultAction(className = SQLException_Exception.class, value = "http://service.utilisateur.com/ArticleWS/updateUtilisateur/Fault/SQLException")
    })
    public boolean updateUtilisateur(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "login", targetNamespace = "")
        String login,
        @WebParam(name = "password", targetNamespace = "")
        String password)
        throws SQLException_Exception
    ;

    /**
     * 
     * @param password
     * @param login
     * @return
     *     returns boolean
     * @throws SQLException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "authentifier", targetNamespace = "http://service.utilisateur.com/", className = "com.utilisateur.service.Authentifier")
    @ResponseWrapper(localName = "authentifierResponse", targetNamespace = "http://service.utilisateur.com/", className = "com.utilisateur.service.AuthentifierResponse")
    @Action(input = "http://service.utilisateur.com/ArticleWS/authentifierRequest", output = "http://service.utilisateur.com/ArticleWS/authentifierResponse", fault = {
        @FaultAction(className = SQLException_Exception.class, value = "http://service.utilisateur.com/ArticleWS/authentifier/Fault/SQLException")
    })
    public boolean authentifier(
        @WebParam(name = "login", targetNamespace = "")
        String login,
        @WebParam(name = "password", targetNamespace = "")
        String password)
        throws SQLException_Exception
    ;

}
